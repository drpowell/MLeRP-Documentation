---
title: Strudel 2
---

Strudel2 is an interactive environment to develop supports two types of jobs. You will be able to reach it from `{{< var strudel2 >}}`.

It will allow you check the cluster's usage and your disk quota. You will also be able to launch interactive jobs on the cluster. Strudel2 offers two kinds of interactive jobs: terminal and jupyter lab.

## Terminal Jobs
Terminal jobs gives you some requested compute attached to a simple text UI. This is ideal if you prefer writing python scripts or running experiments that don't require a GUI. 

You can also launch the web terminal attached to the login node if you just need a quick terminal to manage your files, however this is a shared resource with limited compute.

## Jupyter Lab
Jupyter Lab jobs gives you some requested compute attached to a Jupyter Lab IDE. This is ideal if you prefer experimenting in python notebooks or visualising data with a GUI.

If you prefer using VS Code to the Jupyter Lab IDE you can also connect to this job with the [Remote Development Extension Pack](https://aka.ms/vscode-remote/download/extension). For more details see our page on [connecting via VS Code](/connecting/vscode.qmd).

## Conda Environments
We've provided two environments for you to explore the platform and get started right away:

- The 'base' environment which aims is a minimal installation of jupyter lab. 
- The Data Science Kitchen Sink (DSKS) which is an environment with many typical packages for analysis and machine learning

You can visit the [Base](/applications/base.ipynb) and [DSKS](/applications/dsks.ipynb) pages complete lists of packages and versions in each environment.

If our conda environments don't meet your needs, you can consider maintaining your own [miniconda](https://docs.conda.io/en/latest/miniconda.html) or [mambaforge](https://mamba.readthedocs.io/en/latest/mamba-installation.html#mamba-install) installation in your home directory. Once you're happy with your environment you can point Strudel2 to your environment by edditing your `apps.json` file which can be found in the `.strudel2` folder in your `home` directory. 

Strudel2 will append the new app you've configured below An example `apps.json` template has been provided below:

```json
[
    { 
        "url": null,
        "name": "Custom Jupyter Lab",
        "desc": "This is a custom Jupyter Lab container defined in a user's directory.",
        "startscript": "#!/bin/bash\n/apps/strudel2/strudel_apps/jupyter/custom_env.sh /PATH/TO/YOUR/CONDA/INSTALL/ CONDA_ENV_NAME",
        "instactions": [
            {
                "name": "Connect",
                "paramscmd": "/apps/strudel2/strudel_apps/jupyter/params_cmd.py {jobid} 2>/dev/null",
                "client": {
                    "cmd": null,
                    "redir": "?token={token}"
                },
                "states": [
                    "RUNNING"
                ]
            },
            {
                "name": "Remove log",
                "paramscmd": "rm ~/.strudel2-*{jobid}.out ; echo []",
                "client": null,
                "notunnel": true,
                "states": [
                    "Finished"
                ]
            }
        ],
        "localbind": true,
        "applist": null
    }
]
```

You can edit the name and description fields to suit your environment for your reference. You will also need to edit the path to your conda installation and the environment name you'd like to activate. Note that to use the strudel `Jupyter Lab` application you will need to make sure the `jupyterlab` package is installed in your environment. If you'd like to point Strudel2 to more than one environment, simply append another object to the list.


## FAQ
### Why can't I connect to Jupyter Lab?
Jupyter Lab needs to be able to create files to run properly. If your disk quota is completely full, it will create empty files that will confuse the system. To fix this, ssh into the cluster or use a terminal job to reduce your disk usage back under quota, then delete the empty files which will be found at `/home/<USERNAME>/.local/share/jupyter/runtime`.

There is also a known bug where Brave's 'shield' feature will block the Strudel2 Jupyter application. To bypass this, you'll need to turn off 'shields' for both the [strudel2 home page](https://mlerp.cloud.edu.au/) and the [strudel2 api](https://strudel2-api-dev.cloud.cvl.org.au/).